allfivestats.df <- do.call(rbind, listofsummarystatdataframes)
#which columns contain migration rates? Not the first two (Iteration, LogProb), not the last one (Run).
m_indices <- c(1:length(names(allfivepostburn.df)))[-c(1:2,length(names(allfivepostburn.df)))]
map <- mappinglol[[1]]#take first mapping. They are all the same (otherwise this data organization wouldn't work!)
nothing <- lapply(m_indices, function(m){
onem <- allfivepostburn.df[,c(m,228)]
thism <- colnames(onem)[1]
tofrom <- strsplit(thism, "\\.")[[1]][c(2,4)] #pull just numbers from m.0..0. structure of names
toname <- map[[2]][which(map[[1]]== tofrom[1])][[1]]#map first number to correct population name
fromname <- map[[2]][which(map[[1]]== tofrom[2])][[1]] #map second number to correct population name
mig <- paste("to", toname, "from", fromname, sep = "_")
migread <- paste("fraction of individuals in", toname, "that are migrants from", fromname, "per generation", sep = " ")
if(toname == fromname) {
priorlim <- 2/3
col <- "Red"
priorrange <- c(2/3, 1)
}
else{
priorlim <- 1/3
col <- "Lovely Purple"
priorrange <- c(0,1/3)
}
ggplot(onem, aes_string(names(x=allfivepostburn.df)[m],group=names(allfivepostburn.df)[228], fill=names(allfivepostburn.df)[228], color=names(allfivepostburn.df)[228]))+
geom_density(aes(y=..count..),alpha=0.10)+ # ..density.. ..scaled.. ..count..
theme_bw()+
xlab(migread)+
theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank())+
expand_limits(x = 0, y = 0)+
scale_x_continuous(expand = c(0, 0), limits = priorrange)+
scale_y_continuous(expand = expand_scale(mult = c(0, .2)))+
geom_vline(xintercept = priorlim)
filename1 = paste("m_postdist", mig, thism, "5initialruns_forexample.pdf", sep = "_")
filepath1 = paste(path, "plots_posterior/", filename1, sep = "")
ggsave(file = filepath1, width = 7, height = 4, units = "in")
filename2 = paste("m_postdist", mig, thism, "5initialruns_forexample.eps", sep = "_")
filepath2 = paste(path, "plots_posterior/", filename2, sep = "")
ggsave(file = filepath2, width = 7, height = 4, units = "in")
})#end loop over migration rate pairs
ggplot2
library(ggplot2)
#which columns contain migration rates? Not the first two (Iteration, LogProb), not the last one (Run).
m_indices <- c(1:length(names(allfivepostburn.df)))[-c(1:2,length(names(allfivepostburn.df)))]
map <- mappinglol[[1]]#take first mapping. They are all the same (otherwise this data organization wouldn't work!)
nothing <- lapply(m_indices, function(m){
onem <- allfivepostburn.df[,c(m,228)]
thism <- colnames(onem)[1]
tofrom <- strsplit(thism, "\\.")[[1]][c(2,4)] #pull just numbers from m.0..0. structure of names
toname <- map[[2]][which(map[[1]]== tofrom[1])][[1]]#map first number to correct population name
fromname <- map[[2]][which(map[[1]]== tofrom[2])][[1]] #map second number to correct population name
mig <- paste("to", toname, "from", fromname, sep = "_")
migread <- paste("fraction of individuals in", toname, "that are migrants from", fromname, "per generation", sep = " ")
if(toname == fromname) {
priorlim <- 2/3
col <- "Red"
priorrange <- c(2/3, 1)
}
else{
priorlim <- 1/3
col <- "Lovely Purple"
priorrange <- c(0,1/3)
}
ggplot(onem, aes_string(names(x=allfivepostburn.df)[m],group=names(allfivepostburn.df)[228], fill=names(allfivepostburn.df)[228], color=names(allfivepostburn.df)[228]))+
geom_density(aes(y=..count..),alpha=0.10)+ # ..density.. ..scaled.. ..count..
theme_bw()+
xlab(migread)+
theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank())+
expand_limits(x = 0, y = 0)+
scale_x_continuous(expand = c(0, 0), limits = priorrange)+
scale_y_continuous(expand = c(0,0,0.05,0))+
geom_vline(xintercept = priorlim)
filename1 = paste("m_postdist", mig, thism, "5initialruns_forexample.pdf", sep = "_")
filepath1 = paste(path, "plots_posterior/", filename1, sep = "")
ggsave(file = filepath1, width = 7, height = 4, units = "in")
filename2 = paste("m_postdist", mig, thism, "5initialruns_forexample.eps", sep = "_")
filepath2 = paste(path, "plots_posterior/", filename2, sep = "")
ggsave(file = filepath2, width = 7, height = 4, units = "in")
})#end loop over migration rate pairs
#which columns contain migration rates? Not the first two (Iteration, LogProb), not the last one (Run).
m_indices <- c(1:length(names(allfivepostburn.df)))[-c(1:2,length(names(allfivepostburn.df)))]
map <- mappinglol[[1]]#take first mapping. They are all the same (otherwise this data organization wouldn't work!)
nothing <- lapply(m_indices, function(m){
onem <- allfivepostburn.df[,c(m,228)]
thism <- colnames(onem)[1]
tofrom <- strsplit(thism, "\\.")[[1]][c(2,4)] #pull just numbers from m.0..0. structure of names
toname <- map[[2]][which(map[[1]]== tofrom[1])][[1]]#map first number to correct population name
fromname <- map[[2]][which(map[[1]]== tofrom[2])][[1]] #map second number to correct population name
mig <- paste("to", toname, "from", fromname, sep = "_")
migread <- paste("fraction of individuals in", toname, "that are migrants from", fromname, "per generation", sep = " ")
if(toname == fromname) {
priorlim <- 2/3
col <- "Red"
priorrange <- c(2/3, 1)
}
else{
priorlim <- 1/3
col <- "Lovely Purple"
priorrange <- c(0,1/3)
}
ggplot(onem, aes_string(names(x=allfivepostburn.df)[m],group=names(allfivepostburn.df)[228], fill=names(allfivepostburn.df)[228], color=names(allfivepostburn.df)[228]))+
geom_density(aes(y=..count..),alpha=0.10)+ # ..density.. ..scaled.. ..count..
theme_bw()+
xlab(migread)+
theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank())+
expand_limits(x = 0, y = 0)+
scale_x_continuous(expand = c(0, 0), limits = priorrange)+
scale_y_continuous(expand = c(0,0,1.1,0))+
geom_vline(xintercept = priorlim)
filename1 = paste("m_postdist", mig, thism, "5initialruns_forexample.pdf", sep = "_")
filepath1 = paste(path, "plots_posterior/", filename1, sep = "")
ggsave(file = filepath1, width = 7, height = 4, units = "in")
filename2 = paste("m_postdist", mig, thism, "5initialruns_forexample.eps", sep = "_")
filepath2 = paste(path, "plots_posterior/", filename2, sep = "")
ggsave(file = filepath2, width = 7, height = 4, units = "in")
})#end loop over migration rate pairs
#which columns contain migration rates? Not the first two (Iteration, LogProb), not the last one (Run).
m_indices <- c(1:length(names(allfivepostburn.df)))[-c(1:2,length(names(allfivepostburn.df)))]
map <- mappinglol[[1]]#take first mapping. They are all the same (otherwise this data organization wouldn't work!)
nothing <- lapply(m_indices, function(m){
onem <- allfivepostburn.df[,c(m,228)]
thism <- colnames(onem)[1]
tofrom <- strsplit(thism, "\\.")[[1]][c(2,4)] #pull just numbers from m.0..0. structure of names
toname <- map[[2]][which(map[[1]]== tofrom[1])][[1]]#map first number to correct population name
fromname <- map[[2]][which(map[[1]]== tofrom[2])][[1]] #map second number to correct population name
mig <- paste("to", toname, "from", fromname, sep = "_")
migread <- paste("fraction of individuals in", toname, "that are migrants from", fromname, "per generation", sep = " ")
if(toname == fromname) {
priorlim <- 2/3
col <- "Red"
priorrange <- c(2/3, 1)
}
else{
priorlim <- 1/3
col <- "Lovely Purple"
priorrange <- c(0,1/3)
}
ggplot(onem, aes_string(names(x=allfivepostburn.df)[m],group=names(allfivepostburn.df)[228], fill=names(allfivepostburn.df)[228], color=names(allfivepostburn.df)[228]))+
geom_density(aes(y=..count..),alpha=0.10)+ # ..density.. ..scaled.. ..count..
theme_bw()+
xlab(migread)+
theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank())+
expand_limits(x = 0, y = 0)+
scale_x_continuous(expand = c(0, 0), limits = priorrange)+
scale_y_continuous(expand = c(0,0,20,0))+
geom_vline(xintercept = priorlim)
filename1 = paste("m_postdist", mig, thism, "5initialruns_forexample.pdf", sep = "_")
filepath1 = paste(path, "plots_posterior/", filename1, sep = "")
ggsave(file = filepath1, width = 7, height = 4, units = "in")
filename2 = paste("m_postdist", mig, thism, "5initialruns_forexample.eps", sep = "_")
filepath2 = paste(path, "plots_posterior/", filename2, sep = "")
ggsave(file = filepath2, width = 7, height = 4, units = "in")
})#end loop over migration rate pairs
#which columns contain migration rates? Not the first two (Iteration, LogProb), not the last one (Run).
m_indices <- c(1:length(names(allfivepostburn.df)))[-c(1:2,length(names(allfivepostburn.df)))]
map <- mappinglol[[1]]#take first mapping. They are all the same (otherwise this data organization wouldn't work!)
nothing <- lapply(m_indices, function(m){
onem <- allfivepostburn.df[,c(m,228)]
thism <- colnames(onem)[1]
tofrom <- strsplit(thism, "\\.")[[1]][c(2,4)] #pull just numbers from m.0..0. structure of names
toname <- map[[2]][which(map[[1]]== tofrom[1])][[1]]#map first number to correct population name
fromname <- map[[2]][which(map[[1]]== tofrom[2])][[1]] #map second number to correct population name
mig <- paste("to", toname, "from", fromname, sep = "_")
migread <- paste("fraction of individuals in", toname, "that are migrants from", fromname, "per generation", sep = " ")
if(toname == fromname) {
priorlim <- 2/3
col <- "Red"
priorrange <- c(2/3, 1)
}
else{
priorlim <- 1/3
col <- "Lovely Purple"
priorrange <- c(0,1/3)
}
ggplot(onem, aes_string(names(x=allfivepostburn.df)[m],group=names(allfivepostburn.df)[228], fill=names(allfivepostburn.df)[228], color=names(allfivepostburn.df)[228]))+
geom_density(aes(y=..count..),alpha=0.10)+ # ..density.. ..scaled.. ..count..
theme_bw()+
xlab(migread)+
theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank())+
expand_limits(x = 0, y = 0)+
scale_x_continuous(expand = c(0, 0), limits = priorrange)+
scale_y_continuous(expand = c(0,0,20,0), labels = fancy_scientific)+
geom_vline(xintercept = priorlim)
filename1 = paste("m_postdist", mig, thism, "5initialruns_forexample.pdf", sep = "_")
filepath1 = paste(path, "plots_posterior/", filename1, sep = "")
ggsave(file = filepath1, width = 7, height = 4, units = "in")
filename2 = paste("m_postdist", mig, thism, "5initialruns_forexample.eps", sep = "_")
filepath2 = paste(path, "plots_posterior/", filename2, sep = "")
ggsave(file = filepath2, width = 7, height = 4, units = "in")
})#end loop over migration rate pairs
library(scales)
scales??
sjdnflkjaf
#which columns contain migration rates? Not the first two (Iteration, LogProb), not the last one (Run).
m_indices <- c(1:length(names(allfivepostburn.df)))[-c(1:2,length(names(allfivepostburn.df)))]
map <- mappinglol[[1]]#take first mapping. They are all the same (otherwise this data organization wouldn't work!)
nothing <- lapply(m_indices, function(m){
onem <- allfivepostburn.df[,c(m,228)]
thism <- colnames(onem)[1]
tofrom <- strsplit(thism, "\\.")[[1]][c(2,4)] #pull just numbers from m.0..0. structure of names
toname <- map[[2]][which(map[[1]]== tofrom[1])][[1]]#map first number to correct population name
fromname <- map[[2]][which(map[[1]]== tofrom[2])][[1]] #map second number to correct population name
mig <- paste("to", toname, "from", fromname, sep = "_")
migread <- paste("fraction of individuals in", toname, "that are migrants from", fromname, "per generation", sep = " ")
if(toname == fromname) {
priorlim <- 2/3
col <- "Red"
priorrange <- c(2/3, 1)
}
else{
priorlim <- 1/3
col <- "Lovely Purple"
priorrange <- c(0,1/3)
}
ggplot(onem, aes_string(names(x=allfivepostburn.df)[m],group=names(allfivepostburn.df)[228], fill=names(allfivepostburn.df)[228], color=names(allfivepostburn.df)[228]))+
geom_density(aes(y=..count..),alpha=0.10)+ # ..density.. ..scaled.. ..count..
theme_bw()+
xlab(migread)+
theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank())+
expand_limits(x = 0, y = 0)+
scale_x_continuous(expand = c(0, 0), limits = priorrange)+
scale_y_continuous(expand = c(0,0,20,0), labels = comma)+
geom_vline(xintercept = priorlim)
filename1 = paste("m_postdist", mig, thism, "5initialruns_forexample.pdf", sep = "_")
filepath1 = paste(path, "plots_posterior/", filename1, sep = "")
ggsave(file = filepath1, width = 4, height = 2, units = "in")
filename2 = paste("m_postdist", mig, thism, "5initialruns_forexample.eps", sep = "_")
filepath2 = paste(path, "plots_posterior/", filename2, sep = "")
ggsave(file = filepath2, width = 4, height = 2, units = "in")
})#end loop over migration rate pairs
#which columns contain migration rates? Not the first two (Iteration, LogProb), not the last one (Run).
m_indices <- c(1:length(names(allfivepostburn.df)))[-c(1:2,length(names(allfivepostburn.df)))]
map <- mappinglol[[1]]#take first mapping. They are all the same (otherwise this data organization wouldn't work!)
nothing <- lapply(m_indices, function(m){
onem <- allfivepostburn.df[,c(m,228)]
thism <- colnames(onem)[1]
tofrom <- strsplit(thism, "\\.")[[1]][c(2,4)] #pull just numbers from m.0..0. structure of names
toname <- map[[2]][which(map[[1]]== tofrom[1])][[1]]#map first number to correct population name
fromname <- map[[2]][which(map[[1]]== tofrom[2])][[1]] #map second number to correct population name
mig <- paste("to", toname, "from", fromname, sep = "_")
migread <- paste("fraction of individuals in", toname, "that are migrants from", fromname, "per generation", sep = " ")
if(toname == fromname) {
priorlim <- 2/3
col <- "Red"
priorrange <- c(2/3, 1)
}
else{
priorlim <- 1/3
col <- "Lovely Purple"
priorrange <- c(0,1/3)
}
ggplot(onem, aes_string(names(x=allfivepostburn.df)[m],group=names(allfivepostburn.df)[228], fill=names(allfivepostburn.df)[228], color=names(allfivepostburn.df)[228]))+
geom_density(aes(y=..count..),alpha=0.10)+ # ..density.. ..scaled.. ..count..
theme_bw()+
xlab(migread)+
theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank())+
expand_limits(x = 0, y = 0)+
scale_x_continuous(expand = c(0, 0), limits = priorrange)+
scale_y_continuous(expand = c(0,0,20,0), labels = comma)+
geom_vline(xintercept = priorlim)
filename1 = paste("m_postdist", mig, thism, "5initialruns_forexample.pdf", sep = "_")
filepath1 = paste(path, "plots_posterior/", filename1, sep = "")
ggsave(file = filepath1, width = 8, height = 3, units = "in")
filename2 = paste("m_postdist", mig, thism, "5initialruns_forexample.eps", sep = "_")
filepath2 = paste(path, "plots_posterior/", filename2, sep = "")
ggsave(file = filepath2, width = 8, height = 3, units = "in")
})#end loop over migration rate pairs
#which columns contain migration rates? Not the first two (Iteration, LogProb), not the last one (Run).
m_indices <- c(1:length(names(allfivepostburn.df)))[-c(1:2,length(names(allfivepostburn.df)))]
map <- mappinglol[[1]]#take first mapping. They are all the same (otherwise this data organization wouldn't work!)
nothing <- lapply(m_indices, function(m){
onem <- allfivepostburn.df[,c(m,228)]
thism <- colnames(onem)[1]
tofrom <- strsplit(thism, "\\.")[[1]][c(2,4)] #pull just numbers from m.0..0. structure of names
toname <- map[[2]][which(map[[1]]== tofrom[1])][[1]]#map first number to correct population name
fromname <- map[[2]][which(map[[1]]== tofrom[2])][[1]] #map second number to correct population name
mig <- paste("to", toname, "from", fromname, sep = "_")
migread <- paste("fraction of individuals in", toname, "that are migrants from", fromname, "per generation", sep = " ")
if(toname == fromname) {
priorlim <- 2/3
col <- "Red"
priorrange <- c(2/3, 1)
}
else{
priorlim <- 1/3
col <- "Lovely Purple"
priorrange <- c(0,1/3)
}
ggplot(onem, aes_string(names(x=allfivepostburn.df)[m],group=names(allfivepostburn.df)[228], fill=names(allfivepostburn.df)[228], color=names(allfivepostburn.df)[228]))+
geom_density(aes(y=..count..),alpha=0.10)+ # ..density.. ..scaled.. ..count..
theme_bw()+
xlab(migread)+
theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank())+
expand_limits(x = 0, y = 0)+
scale_x_continuous(expand = c(0, 0), limits = priorrange)+
scale_y_continuous(expand = c(0,0,0,10000), labels = comma)+
geom_vline(xintercept = priorlim)
filename1 = paste("m_postdist", mig, thism, "5initialruns_forexample.pdf", sep = "_")
filepath1 = paste(path, "plots_posterior/", filename1, sep = "")
ggsave(file = filepath1, width = 7, height = 3, units = "in")
filename2 = paste("m_postdist", mig, thism, "5initialruns_forexample.eps", sep = "_")
filepath2 = paste(path, "plots_posterior/", filename2, sep = "")
ggsave(file = filepath2, width = 7, height = 3, units = "in")
})#end loop over migration rate pairs
#which columns contain migration rates? Not the first two (Iteration, LogProb), not the last one (Run).
m_indices <- c(1:length(names(allfivepostburn.df)))[-c(1:2,length(names(allfivepostburn.df)))]
map <- mappinglol[[1]]#take first mapping. They are all the same (otherwise this data organization wouldn't work!)
nothing <- lapply(m_indices, function(m){
onem <- allfivepostburn.df[,c(m,228)]
thism <- colnames(onem)[1]
tofrom <- strsplit(thism, "\\.")[[1]][c(2,4)] #pull just numbers from m.0..0. structure of names
toname <- map[[2]][which(map[[1]]== tofrom[1])][[1]]#map first number to correct population name
fromname <- map[[2]][which(map[[1]]== tofrom[2])][[1]] #map second number to correct population name
mig <- paste("to", toname, "from", fromname, sep = "_")
migread <- paste("fraction of individuals in", toname, "that are migrants from", fromname, "per generation", sep = " ")
if(toname == fromname) {
priorlim <- 2/3
col <- "Red"
priorrange <- c(2/3, 1)
}
else{
priorlim <- 1/3
col <- "Lovely Purple"
priorrange <- c(0,1/3)
}
ggplot(onem, aes_string(names(x=allfivepostburn.df)[m],group=names(allfivepostburn.df)[228], fill=names(allfivepostburn.df)[228], color=names(allfivepostburn.df)[228]))+
geom_density(aes(y=..count..),alpha=0.10)+ # ..density.. ..scaled.. ..count..
theme_bw()+
xlab(migread)+
theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank())+
expand_limits(x = 0, y = 0)+
scale_x_continuous(expand = c(0, 0), limits = priorrange)+
scale_y_continuous(expand = c(0,0,0,1000000), labels = comma)+
geom_vline(xintercept = priorlim)
filename1 = paste("m_postdist", mig, thism, "5initialruns_forexample.pdf", sep = "_")
filepath1 = paste(path, "plots_posterior/", filename1, sep = "")
ggsave(file = filepath1, width = 7, height = 3, units = "in")
filename2 = paste("m_postdist", mig, thism, "5initialruns_forexample.eps", sep = "_")
filepath2 = paste(path, "plots_posterior/", filename2, sep = "")
ggsave(file = filepath2, width = 7, height = 3, units = "in")
})#end loop over migration rate pairs
#which columns contain migration rates? Not the first two (Iteration, LogProb), not the last one (Run).
m_indices <- c(1:length(names(allfivepostburn.df)))[-c(1:2,length(names(allfivepostburn.df)))]
map <- mappinglol[[1]]#take first mapping. They are all the same (otherwise this data organization wouldn't work!)
nothing <- lapply(m_indices, function(m){
onem <- allfivepostburn.df[,c(m,228)]
thism <- colnames(onem)[1]
tofrom <- strsplit(thism, "\\.")[[1]][c(2,4)] #pull just numbers from m.0..0. structure of names
toname <- map[[2]][which(map[[1]]== tofrom[1])][[1]]#map first number to correct population name
fromname <- map[[2]][which(map[[1]]== tofrom[2])][[1]] #map second number to correct population name
mig <- paste("to", toname, "from", fromname, sep = "_")
migread <- paste("fraction of individuals in", toname, "that are migrants from", fromname, "per generation", sep = " ")
if(toname == fromname) {
priorlim <- 2/3
col <- "Red"
priorrange <- c(2/3, 1)
}
else{
priorlim <- 1/3
col <- "Lovely Purple"
priorrange <- c(0,1/3)
}
ggplot(onem, aes_string(names(x=allfivepostburn.df)[m],group=names(allfivepostburn.df)[228], fill=names(allfivepostburn.df)[228], color=names(allfivepostburn.df)[228]))+
geom_density(aes(y=..count..),alpha=0.10)+ # ..density.. ..scaled.. ..count..
theme_bw()+
xlab(migread)+
theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank())+
expand_limits(x = 0, y = 0)+
scale_x_continuous(expand = c(0, 0), limits = priorrange)+
scale_y_continuous(expand = c(0,0,0,10000000), labels = comma)+
geom_vline(xintercept = priorlim)
filename1 = paste("m_postdist", mig, thism, "5initialruns_forexample.pdf", sep = "_")
filepath1 = paste(path, "plots_posterior/", filename1, sep = "")
ggsave(file = filepath1, width = 7, height = 3, units = "in")
filename2 = paste("m_postdist", mig, thism, "5initialruns_forexample.eps", sep = "_")
filepath2 = paste(path, "plots_posterior/", filename2, sep = "")
ggsave(file = filepath2, width = 7, height = 3, units = "in")
})#end loop over migration rate pairs
#which columns contain migration rates? Not the first two (Iteration, LogProb), not the last one (Run).
m_indices <- c(1:length(names(allfivepostburn.df)))[-c(1:2,length(names(allfivepostburn.df)))]
map <- mappinglol[[1]]#take first mapping. They are all the same (otherwise this data organization wouldn't work!)
nothing <- lapply(m_indices, function(m){
onem <- allfivepostburn.df[,c(m,228)]
thism <- colnames(onem)[1]
tofrom <- strsplit(thism, "\\.")[[1]][c(2,4)] #pull just numbers from m.0..0. structure of names
toname <- map[[2]][which(map[[1]]== tofrom[1])][[1]]#map first number to correct population name
fromname <- map[[2]][which(map[[1]]== tofrom[2])][[1]] #map second number to correct population name
mig <- paste("to", toname, "from", fromname, sep = "_")
migread <- paste("fraction of individuals in", toname, " from", fromname, "per generation", sep = " ")
if(toname == fromname) {
priorlim <- 2/3
col <- "Red"
priorrange <- c(2/3, 1)
}
else{
priorlim <- 1/3
col <- "Lovely Purple"
priorrange <- c(0,1/3)
}
ggplot(onem, aes_string(names(x=allfivepostburn.df)[m],group=names(allfivepostburn.df)[228], fill=names(allfivepostburn.df)[228], color=names(allfivepostburn.df)[228]))+
geom_density(aes(y=..count..),alpha=0.10)+ # ..density.. ..scaled.. ..count..
theme_bw()+
xlab(migread)+
theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank())+
expand_limits(x = 0, y = 0)+
scale_x_continuous(expand = c(0, 0), limits = priorrange)+
scale_y_continuous(expand = c(0,0,0,0), labels = comma)+# this is supposed to add multiplicative and additive lower and upper axis expansions, but I couldn't get it to work (changed values, nothing happened)
geom_vline(xintercept = priorlim)
filename1 = paste("m_postdist", mig, thism, "5initialruns_forexample.pdf", sep = "_")
filepath1 = paste(path, "plots_posterior/", filename1, sep = "")
ggsave(file = filepath1, width = 7, height = 3, units = "in")
filename2 = paste("m_postdist", mig, thism, "5initialruns_forexample.eps", sep = "_")
filepath2 = paste(path, "plots_posterior/", filename2, sep = "")
ggsave(file = filepath2, width = 7, height = 3, units = "in")
})#end loop over migration rate pairs
#which columns contain migration rates? Not the first two (Iteration, LogProb), not the last one (Run).
m_indices <- c(1:length(names(allfivepostburn.df)))[-c(1:2,length(names(allfivepostburn.df)))]
map <- mappinglol[[1]]#take first mapping. They are all the same (otherwise this data organization wouldn't work!)
nothing <- lapply(m_indices, function(m){
onem <- allfivepostburn.df[,c(m,228)]
thism <- colnames(onem)[1]
tofrom <- strsplit(thism, "\\.")[[1]][c(2,4)] #pull just numbers from m.0..0. structure of names
toname <- map[[2]][which(map[[1]]== tofrom[1])][[1]]#map first number to correct population name
fromname <- map[[2]][which(map[[1]]== tofrom[2])][[1]] #map second number to correct population name
mig <- paste("to", toname, "from", fromname, sep = "_")
migread <- paste("fraction of individuals in", toname, "from", fromname, "per generation", sep = " ")
if(toname == fromname) {
priorlim <- 2/3
col <- "Red"
priorrange <- c(2/3, 1)
}
else{
priorlim <- 1/3
col <- "Lovely Purple"
priorrange <- c(0,1/3)
}
ggplot(onem, aes_string(names(x=allfivepostburn.df)[m],group=names(allfivepostburn.df)[228], fill=names(allfivepostburn.df)[228], color=names(allfivepostburn.df)[228]))+
geom_density(aes(y=..count..),alpha=0.10)+ # ..density.. ..scaled.. ..count..
theme_bw()+
xlab(migread)+
theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank())+
expand_limits(x = 0, y = 0)+
scale_x_continuous(expand = c(0, 0), limits = priorrange)+
scale_y_continuous(expand = c(0,0,0,0), labels = comma)+# this is supposed to add multiplicative and additive lower and upper axis expansions, but I couldn't get it to work (changed values, nothing happened)
geom_vline(xintercept = priorlim)
filename1 = paste("m_postdist", mig, thism, "5initialruns_forexample.pdf", sep = "_")
filepath1 = paste(path, "plots_posterior/", filename1, sep = "")
ggsave(file = filepath1, width = 7, height = 3, units = "in")
filename2 = paste("m_postdist", mig, thism, "5initialruns_forexample.eps", sep = "_")
filepath2 = paste(path, "plots_posterior/", filename2, sep = "")
ggsave(file = filepath2, width = 7, height = 3, units = "in")
})#end loop over migration rate pairs
options(prompt="R> ")
options(prompt = "Hooray!")
#I think I like vanilla for now, but I like the idea of positivity and customization! could be useful when using multiple code platforms & taking notes.
options(prompt="> ")
options(prompt="R> ")
options(prompt = "Hooray!")
#I think I like vanilla for now, but I like the idea of positivity and customization! could be useful when using multiple code platforms & taking notes.
options(prompt="> ")
#comments can go here
1+1 #comments can go here
getwd()
#Check and see what the working directory is
getwd()
#If you've just opened a .Rmd it seems to set the wd to where it resides.
#Change the working directory to one level higher than where this lives
setwd("Q:/Research/All_Projects_by_Species/Phacelia SPECIES/Phacelia_formosula/Phacelia formosula_abiotic/Modelling/")
getwd()
setwd("Q:/Research/All_Projects_by_Species/Phacelia SPECIES/Phacelia_formosula/Phacelia formosula_abiotic/Modelling/")
getwd()
setwd("Q:/Research/All_Projects_by_Species/Phacelia SPECIES/Phacelia_formosula/Phacelia formosula_abiotic/Modelling/Learn_R")
setwd("Q:/Research/All_Projects_by_Species/Phacelia SPECIES/Phacelia_formosula/Phacelia formosula_abiotic/Modelling/")
knitr::opts_knit$set(root.dir = '/tmp')
knitr::opts_knit$set(root.dir = '/tmp')
getwd()
knitr::opts_knit$set(root.dir = 'Q:/Research/All_Projects_by_Species/Phacelia SPECIES/Phacelia_formosula/Phacelia formosula_abiotic/Modelling/Learn_R')
knitr::opts_knit$set(root.dir = 'Q:/Research/All_Projects_by_Species/Phacelia SPECIES/Phacelia_formosula/Phacelia formosula_abiotic/Modelling/Learn_R')
getwd()
knitr::opts_knit$set(root.dir = 'Q:/Research/All_Projects_by_Species/Phacelia SPECIES/Phacelia_formosula/Phacelia formosula_abiotic/Modelling/')
getwd()
knitr::opts_knit$set(root.dir = 'Q:/Research/All_Projects_by_Species/Phacelia SPECIES/Phacelia_formosula/Phacelia formosula_abiotic/Modelling/')
getwd()
knitr::opts_knit$set(root.dir = 'Q:/Research/All_Projects_by_Species/Phacelia SPECIES/Phacelia_formosula/Phacelia formosula_abiotic/Modelling/)
getwd()
knitr::opts_knit$set(root.dir = 'Q:/Research/All_Projects_by_Species/Phacelia SPECIES/Phacelia_formosula/Phacelia formosula_abiotic/Modelling')
knitr::opts_knit$set(root.dir = "Q:/Research/All_Projects_by_Species/Phacelia SPECIES/Phacelia_formosula/Phacelia formosula_abiotic/Modelling/")
getwd()
getwd()
knitr::opts_knit$set(root.dir = "Q:/Research/All_Projects_by_Species/Phacelia SPECIES/Phacelia_formosula/Phacelia formosula_abiotic/Modelling/")
getwd()
#knitr::opts_knit$set(root.dir = "Q:/Research/All_Projects_by_Species/Phacelia SPECIES/Phacelia_formosula/Phacelia formosula_abiotic/Modelling/")
opts_chunk$set(root.dir = 'Q:/Research/All_Projects_by_Species/Phacelia SPECIES/Phacelia_formosula/Phacelia formosula_abiotic/Modelling/')
opts_knit$set(root.dir = 'Q:/Research/All_Projects_by_Species/Phacelia SPECIES/Phacelia_formosula/Phacelia formosula_abiotic/Modelling/')
knitr::opts_knit$set(root.dir = "Q:/Research/All_Projects_by_Species/Phacelia SPECIES/Phacelia_formosula/Phacelia formosula_abiotic/Modelling/")
getwd
getwd()
knitr::opts_knit$set(root.dir = "Q:/Research/All_Projects_by_Species/Phacelia SPECIES/Phacelia_formosula/Phacelia formosula_abiotic/Modelling/")
getwd()
setwd("Q:/Research/All_Projects_by_Species/Phacelia SPECIES/Phacelia_formosula/Phacelia formosula_abiotic/Modelling/Learn_R")
#Check and see what the working directory is
getwd()
#If you've just opened a .Rmd it seems to set the wd to where it resides.
#Change the working directory to one level higher than where this lives
setwd("Q:/Research/All_Projects_by_Species/Phacelia SPECIES/Phacelia_formosula/Phacelia formosula_abiotic/Modelling/")
getwd()
setwd("Q:/Research/All_Projects_by_Species/Phacelia SPECIES/Phacelia_formosula/Phacelia formosula_abiotic/Modelling/Learn_R")
getwd)
getwd()
setwd("Q:/Research/All_Projects_by_Species/Phacelia SPECIES/Phacelia_formosula/Phacelia formosula_abiotic/Modelling/")
getwd()
setwd("Q:/Research/All_Projects_by_Species/Phacelia SPECIES/Phacelia_formosula/Phacelia formosula_abiotic/Modelling/")
setwd("Q:/Research/All_Projects_by_Species/Phacelia SPECIES/Phacelia_formosula/Phacelia formosula_abiotic/Modelling/Learn_R/")
getwd()
